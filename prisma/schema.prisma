// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ----- HOME -----

model HomeSchema {
  id     String           @id @default(uuid())
  name   String
  city   String
  rooms  RoomSchema[]
  scenes SceneSchema[]
  alarm  AlarmSchema?
  usage  UsageLogSchema[]
}

// ----- ROOM -----

model RoomSchema {
  id     String @id @default(uuid())
  name   String
  imgUrl String

  home    HomeSchema?    @relation(fields: [homeId], references: [id])
  homeId  String
  devices DeviceSchema[]

  @@unique([id, homeId])
}

// ----- DEVICE -----
enum AddressType {
  DI
  DO
  AI
  AO
}

enum ControlledValue {
  READ_VALUE
  WRITE_STATE
  WRITE_SETPOINT
}

model DeviceAddressSchema {
  id              String          @id @default(uuid())
  address         String
  addressType     AddressType
  controlledValue ControlledValue

  deviceId String
  device   DeviceSchema? @relation(fields: [deviceId], references: [id])
}

enum ValueType {
  DIGITAL
  PERCENT
  TEMPERATURE
}

model DeviceSchema {
  id        String    @id @default(uuid())
  name      String
  state     Boolean
  setpoint  Float
  valueType ValueType

  roomId String
  room   RoomSchema? @relation(fields: [roomId], references: [id])

  addresses DeviceAddressSchema[]

  controlledDevices SceneControlledDeviceSchema[]

  @@unique([id, roomId])
}

// ----- SCENE -----

model SceneSchema {
  id                String                        @id @default(uuid())
  name              String
  state             Boolean
  schedule          SceneScheduleSchema?
  controlledDevices SceneControlledDeviceSchema[]

  home   HomeSchema? @relation(fields: [homeId], references: [id])
  homeId String

  @@unique([id, homeId])
}

model SceneScheduleDaySchema {
  id               String @id @default(uuid())
  dayOfWeek        Int
  startTimeHours   Int
  startTimeMinutes Int

  sceneScheduleId String
  sceneSchedule   SceneScheduleSchema @relation(fields: [sceneScheduleId], references: [id])
}

model SceneScheduleSchema {
  id     String  @id @default(uuid())
  active Boolean

  scene        SceneSchema              @relation(fields: [sceneId], references: [id])
  sceneId      String                   @unique
  scheduleDays SceneScheduleDaySchema[]
}

model SceneControlledDeviceSchema {
  id       String  @id @default(uuid())
  setpoint Float
  state    Boolean

  sceneId String
  scene   SceneSchema @relation(fields: [sceneId], references: [id])

  deviceId String
  device   DeviceSchema @relation(fields: [deviceId], references: [id])
}

// ----- ALARM -----

model AlarmSchema {
  id                String      @id @default(uuid())
  state             Boolean
  stateAddress      String
  stateAddressType  AddressType
  status            Boolean
  statusAddress     String
  statusAddressType AddressType

  homeId String     @unique
  home   HomeSchema @relation(fields: [homeId], references: [id])
}

// ----- USAGE -----

model UsageLogSchema {
  id    String   @id @default(uuid())
  date  DateTime
  value Float

  homeId String     @unique
  home   HomeSchema @relation(fields: [homeId], references: [id])
}
